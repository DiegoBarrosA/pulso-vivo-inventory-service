-- Schema initialization for Oracle Database
-- Drop table if exists (Oracle syntax)
BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE PRODUCT CASCADE CONSTRAINTS';
EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE != -942 THEN
            RAISE;
        END IF;
END;
/

-- Drop sequence if exists
BEGIN
    EXECUTE IMMEDIATE 'DROP SEQUENCE PRODUCT_SEQ';
EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE != -2289 THEN
            RAISE;
        END IF;
END;
/

-- Create sequence for product ID
CREATE SEQUENCE PRODUCT_SEQ
    START WITH 1
    INCREMENT BY 1
    NOCACHE
    NOCYCLE;

-- Create PRODUCT table with all required fields
CREATE TABLE PRODUCT (
    ID NUMBER(19) NOT NULL,
    NAME VARCHAR2(255) NOT NULL,
    DESCRIPTION VARCHAR2(1000),
    QUANTITY NUMBER(10) DEFAULT 0 NOT NULL,
    CATEGORY VARCHAR2(100),
    ACTIVE NUMBER(1) DEFAULT 1 NOT NULL,
    PRICE NUMBER(10,2),
    LAST_PRICE_UPDATE TIMESTAMP,
    PREVIOUS_PRICE NUMBER(10,2),
    VERSION NUMBER(19) DEFAULT 0,
    
    CONSTRAINT PK_PRODUCT PRIMARY KEY (ID),
    CONSTRAINT CHK_PRODUCT_ACTIVE CHECK (ACTIVE IN (0, 1)),
    CONSTRAINT CHK_PRODUCT_QUANTITY CHECK (QUANTITY >= 0),
    CONSTRAINT CHK_PRODUCT_PRICE CHECK (PRICE IS NULL OR PRICE >= 0),
    CONSTRAINT CHK_PRODUCT_PREVIOUS_PRICE CHECK (PREVIOUS_PRICE IS NULL OR PREVIOUS_PRICE >= 0)
);

-- Create trigger for auto-increment ID
CREATE OR REPLACE TRIGGER TRG_PRODUCT_ID
    BEFORE INSERT ON PRODUCT
    FOR EACH ROW
BEGIN
    IF :NEW.ID IS NULL THEN
        SELECT PRODUCT_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
    END IF;
    
    -- Set default timestamp if not provided
    IF :NEW.LAST_PRICE_UPDATE IS NULL THEN
        :NEW.LAST_PRICE_UPDATE := SYSTIMESTAMP;
    END IF;
END;
/

-- Create index on category for better query performance
CREATE INDEX IDX_PRODUCT_CATEGORY ON PRODUCT(CATEGORY);

-- Create index on active status for filtering
CREATE INDEX IDX_PRODUCT_ACTIVE ON PRODUCT(ACTIVE);

-- Create index on quantity for low stock queries
CREATE INDEX IDX_PRODUCT_QUANTITY ON PRODUCT(QUANTITY);

-- Create index on last price update for price tracking
CREATE INDEX IDX_PRODUCT_LAST_PRICE_UPDATE ON PRODUCT(LAST_PRICE_UPDATE);

-- Commit the schema changes
COMMIT;


-- Drop the problematic trigger
DROP TRIGGER ADMIN.TRG_PRODUCT_ID;

-- Also drop the associated sequence if it exists
DROP SEQUENCE ADMIN.SEQ_PRODUCT_ID; 